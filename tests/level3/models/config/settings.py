"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
import sys
import json
from urllib import parse
from rs4.attrdict import AttrDict

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_ROOT = os.getenv ('STATIC_ROOT') or os.path.join(BASE_DIR, "static/")
STATIC_URL = '/admin/static/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

SECRET_KEY = os.getenv ('SECRET_KEY')
assert SECRET_KEY, "env SECRET_KEY required,\n  ex) export SECRET_KEY='my_secret_key'"

DEBUG = os.getenv ('SKITAIENV') != 'PRODUCTION'

ALLOWED_HOSTS = ['*']
LIST_PER_PAGE = 20

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rangefilter',
    'admin_numeric_filter',
]

INSTALLED_APPS.append ('dap.firebase_vue')
INSTALLED_APPS.append ('dap.transcription')

if os.getenv ('DBMODEL_DIR'):
    sys.path.insert (0, os.getenv ('DBMODEL_DIR'))
    for d in os.listdir (os.path.join (os.getenv ('DBMODEL_DIR'), 'dapps')):
        if os.path.isfile (os.path.join (os.getenv ('DBMODEL_DIR'), 'dapps', d, 'apps.py')):
            INSTALLED_APPS.append ('dapps.{}'.format (d))

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'
WSGI_APPLICATION = 'wsgi.application'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#config

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
DBENGINE = os.getenv ("DBENGINE")
if DBENGINE:
    _parts = parse.urlparse (DBENGINE)
    if _parts.scheme == 'sqlite3':
        _dbname = _parts.path
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': _dbname
            },
        }

    elif _parts.scheme in ('postgresql', 'oracle'):
        _auth, _host = _parts.netloc.split ("@")
        try:
            _host, _port = _host.split (":")
        except ValueError:
            _port = '5432'
        _dbname = _parts.path [1:]
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql_psycopg2' if _parts.scheme == 'postgresql' else 'django.db.backends.oracle',
                'NAME': _dbname + '_',
                'USER': _auth.split (":") [0],
                'PASSWORD': _auth.split (":") [1],
                'HOST': _host,
                'PORT': _port,
            },
        }

    # switch magic
    DATABASES ['qa'] = DATABASES ['default'].copy ()
    DATABASES ['production'] = DATABASES ['default'].copy ()
    DATABASES ['production']['NAME'] = _dbname
    if not sys.argv [0].endswith ('manage.py') and '--devel' not in sys.argv:
        DATABASES ['default']['NAME'] = _dbname

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-US'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
# manage.py collectstatic --noinput
